<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_physx_schema_physx_vehicle_context_a_p_i" kind="class" prot="public">
    <compoundname>PhysxSchemaPhysxVehicleContextAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="physx_vehicle_context_a_p_i_8h" local="no">physxVehicleContextAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_physx_schema_physx_vehicle_context_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::SingleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="68" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_physx_schema_physx_vehicle_context_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="139" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a57b2ec127cb631d38b34d451fc7166ef" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxVehicleContextAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>PhysxSchemaPhysxVehicleContextAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1a8bfefbdd37051def64e72e421ff583f1" kindref="member">PhysxSchemaPhysxVehicleContextAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="74" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1ac62ad382132c5f37bd8002b531773dbc" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxVehicleContextAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>PhysxSchemaPhysxVehicleContextAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="82" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a6ed55dbb6f31dd579cf09722539e75c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>PHYSXSCHEMA_API</type>
        <definition>virtual PHYSXSCHEMA_API ~PhysxSchemaPhysxVehicleContextAPI</definition>
        <argsstring>()</argsstring>
        <name>~PhysxSchemaPhysxVehicleContextAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a44afe744d494fb3d6a4aab219aae1497" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetUpdateModeAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetUpdateModeAttr</name>
        <briefdescription>
<para>The dynamics of the vehicle simulation can get applied to the PhysX rigid body by either applying an acceleration or by using a velocity delta. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="6" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>uniform token physxVehicleContext:updateMode = &quot;velocityChange&quot;</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>TfToken </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Token </para></entry></row>
<row>
<entry thead="no"><para>Variability </para></entry><entry thead="no"><para>SdfVariabilityUniform </para></entry></row>
<row>
<entry thead="no"><para><ref refid="physx_schema_2tokens_8h_1a393f20ccb3241cdd3a3884bd0041317b" kindref="member">Allowed Values</ref> </para></entry><entry thead="no"><para>velocityChange, acceleration </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a3be5a3e260b0935b5358bec48591ed14" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateUpdateModeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateUpdateModeAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1a44afe744d494fb3d6a4aab219aae1497" kindref="member">GetUpdateModeAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a3d67439768e122505a2695b52ae872d5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetUpAxisAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetUpAxisAttr</name>
        <briefdescription>
<para>The normalized vector defining the general up direction to use for vehicles. </para>        </briefdescription>
        <detaileddescription>
<para>Note: this attribute has to be specified (there is no default).</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float3 physxVehicleContext:upAxis</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>GfVec3f </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float3 </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a75f357efcb5772691a73b6873f193080" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateUpAxisAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateUpAxisAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1a3d67439768e122505a2695b52ae872d5" kindref="member">GetUpAxisAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1aaf36d99df9f97c67ff6c65988fc51b9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetForwardAxisAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetForwardAxisAttr</name>
        <briefdescription>
<para>The normalized vector defining the general forward direction to use for vehicles. </para>        </briefdescription>
        <detaileddescription>
<para>Note: this attribute has to be specified (there is no default).</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float3 physxVehicleContext:forwardAxis</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>GfVec3f </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float3 </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a30ffd01276bef8b037df39abfe06a563" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateForwardAxisAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateForwardAxisAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1aaf36d99df9f97c67ff6c65988fc51b9a" kindref="member">GetForwardAxisAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="220" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1aae722d5fc55dc972d66997515a005838" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSweepRadiusScaleAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSweepRadiusScaleAttr</name>
        <briefdescription>
<para>A scaling factor that gets applied to the geometry of the wheel used in the sweep. </para>        </briefdescription>
        <detaileddescription>
<para>Values &lt; 1 result in a smaller swept wheel, while values &gt; 1 result in a larger swept wheel. The value has to be positive.</para><para>Note: will only affect vehicles that are using sweeps for wheel vs. ground collision detection.</para><para>Note: this scale will only be used for finding the colliding ground object. The simulation relevant hit information will then be computed using the original wheel radius and width.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleContext:sweepRadiusScale = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="242" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1aeb96e5dc9627253c39e7e0a8ca265157" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSweepRadiusScaleAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSweepRadiusScaleAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1aae722d5fc55dc972d66997515a005838" kindref="member">GetSweepRadiusScaleAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a2af03358d1beb3aa4ba35881da453672" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSweepWidthScaleAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSweepWidthScaleAttr</name>
        <briefdescription>
<para>A scaling factor that gets applied to the geometry of the wheel used in the sweep. </para>        </briefdescription>
        <detaileddescription>
<para>Values &lt; 1 result in a thinner swept wheel, while values &gt; 1 result in a fatter swept wheel. The value has to be positive.</para><para>Note: will only affect vehicles that are using sweeps for wheel vs. ground collision detection.</para><para>Note: this scale will only be used for finding the colliding ground object. The simulation relevant hit information will then be computed using the original wheel radius and width.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleContext:sweepWidthScale = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1ac3c96367b0667ff676c570ac9218bb42" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSweepWidthScaleAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSweepWidthScaleAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1a2af03358d1beb3aa4ba35881da453672" kindref="member">GetSweepWidthScaleAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="280" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfTokenVector &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a8bfefbdd37051def64e72e421ff583f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxVehicleContextAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/><ref refid="class_physx_schema_physx_vehicle_context_a_p_i_1a57b2ec127cb631d38b34d451fc7166ef" kindref="member">PhysxSchemaPhysxVehicleContextAPI</ref>(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1ab3d242352b19dd22a238da5518eaa4c4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxVehicleContextAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysxVehicleContextAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para><para><simplesect kind="return"><para>A valid <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_physx_schema_physx_vehicle_context_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleContextAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdSchemaType</type>
        <definition>PHYSXSCHEMA_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_context_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>PHYSXSCHEMA_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="147" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PhysX vehicles general settings. </para>    </briefdescription>
    <detaileddescription>
<para>Has to be applied to a PhysicsScene prim.</para><para>For any described attribute <emphasis>Fallback</emphasis> <emphasis>Value</emphasis> or <emphasis>Allowed</emphasis> <emphasis>Values</emphasis> below that are text/tokens, the actual token is published and defined in <ref refid="physx_schema_2tokens_8h_1a393f20ccb3241cdd3a3884bd0041317b" kindref="member">PhysxSchemaTokens</ref>. So to set an attribute to the value &quot;rightHanded&quot;, use PhysxSchemaTokens-&gt;rightHanded as the value. </para>    </detaileddescription>
    <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" line="63" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleContextAPI.h" bodystart="62" bodyend="293"/>
    <listofallmembers>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>_GetTfType</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1ab3d242352b19dd22a238da5518eaa4c4" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>Apply</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a30ffd01276bef8b037df39abfe06a563" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>CreateForwardAxisAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1aeb96e5dc9627253c39e7e0a8ca265157" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>CreateSweepRadiusScaleAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1ac3c96367b0667ff676c570ac9218bb42" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>CreateSweepWidthScaleAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a75f357efcb5772691a73b6873f193080" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>CreateUpAxisAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a3be5a3e260b0935b5358bec48591ed14" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>CreateUpdateModeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a8bfefbdd37051def64e72e421ff583f1" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>Get</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1aaf36d99df9f97c67ff6c65988fc51b9a" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetForwardAxisAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1aae722d5fc55dc972d66997515a005838" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetSweepRadiusScaleAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a2af03358d1beb3aa4ba35881da453672" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetSweepWidthScaleAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a3d67439768e122505a2695b52ae872d5" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetUpAxisAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a44afe744d494fb3d6a4aab219aae1497" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>GetUpdateModeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a57b2ec127cb631d38b34d451fc7166ef" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>PhysxSchemaPhysxVehicleContextAPI</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1ac62ad382132c5f37bd8002b531773dbc" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>PhysxSchemaPhysxVehicleContextAPI</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>schemaType</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_physx_schema_physx_vehicle_context_a_p_i_1a6ed55dbb6f31dd579cf09722539e75c0" prot="public" virt="virtual"><scope>PhysxSchemaPhysxVehicleContextAPI</scope><name>~PhysxSchemaPhysxVehicleContextAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
