<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_usd_physics_rigid_body_a_p_i" kind="class" prot="public">
    <compoundname>UsdPhysicsRigidBodyAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="rigid_body_a_p_i_8h" local="no">rigidBodyAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_physics_rigid_body_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::SingleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="66" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_physics_rigid_body_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="137" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1ae1030adfd8e8ac466b5e9c741abcd456" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsRigidBodyAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdPhysicsRigidBodyAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_physics_rigid_body_a_p_i_1aa15d907f70d37a89fe2ecab59020e312" kindref="member">UsdPhysicsRigidBodyAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="72" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1ae31a1453617bffe37e9a37d95a085a88" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsRigidBodyAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdPhysicsRigidBodyAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="80" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a890360606c0f0d7eb748931b5ef2d139" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API</type>
        <definition>virtual USDPHYSICS_API ~UsdPhysicsRigidBodyAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdPhysicsRigidBodyAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a46366788843971ba1c27b8f5a08e09de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetRigidBodyEnabledAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetRigidBodyEnabledAttr</name>
        <briefdescription>
<para>Determines if this PhysicsRigidBodyAPI is enabled. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>bool physics:rigidBodyEnabled = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="159" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1ac54f87a79abd85489a737672df53f65b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateRigidBodyEnabledAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateRigidBodyEnabledAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1a46366788843971ba1c27b8f5a08e09de" kindref="member">GetRigidBodyEnabledAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="167" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a33affb75f58ed2bde4d6ba4e498fe345" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetKinematicEnabledAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetKinematicEnabledAttr</name>
        <briefdescription>
<para>Determines whether the body is kinematic or not. </para>        </briefdescription>
        <detaileddescription>
<para>A kinematic body is a body that is moved through animated poses or through user defined poses. The simulation still derives velocities for the kinematic body based on the external motion.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>bool physics:kinematicEnabled = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="184" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a2a12638822a2908014f07cae0e26dc72" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateKinematicEnabledAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateKinematicEnabledAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1a33affb75f58ed2bde4d6ba4e498fe345" kindref="member">GetKinematicEnabledAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1aaba566d3608fbc6a95eb5cbc2f03e7d9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetStartsAsleepAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetStartsAsleepAttr</name>
        <briefdescription>
<para>Determines if the body is asleep when the simulation starts. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>uniform bool physics:startsAsleep = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
<row>
<entry thead="no"><para>Variability </para></entry><entry thead="no"><para>SdfVariabilityUniform </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a50ab83c2c806df43c6c8e3a4afa2e959" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateStartsAsleepAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateStartsAsleepAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1aaba566d3608fbc6a95eb5cbc2f03e7d9" kindref="member">GetStartsAsleepAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a42e5a0dfada2a8e0e798ae7c2da70805" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetVelocityAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetVelocityAttr</name>
        <briefdescription>
<para>Linear velocity in the same space as the node&apos;s xform. </para>        </briefdescription>
        <detaileddescription>
<para>Units: distance/time.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>vector3f physics:velocity = (0, 0, 0)</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>GfVec3f </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Vector3f </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1afb3226ba76f2f648b5fde366884a1290" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateVelocityAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateVelocityAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1a42e5a0dfada2a8e0e798ae7c2da70805" kindref="member">GetVelocityAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1aba34f7d49bb685f74e1fb5a7080834c5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetAngularVelocityAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetAngularVelocityAttr</name>
        <briefdescription>
<para>Angular velocity in the same space as the node&apos;s xform. </para>        </briefdescription>
        <detaileddescription>
<para>Units: degrees/time.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>vector3f physics:angularVelocity = (0, 0, 0)</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>GfVec3f </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Vector3f </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="253" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1ae7e2685ac915c26d25fb3986e8de5376" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateAngularVelocityAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateAngularVelocityAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1aba34f7d49bb685f74e1fb5a7080834c5" kindref="member">GetAngularVelocityAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="261" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a81caba58278bb184b5ed9d0aea85bde6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdRelationship</type>
        <definition>USDPHYSICS_API UsdRelationship GetSimulationOwnerRel</definition>
        <argsstring>() const </argsstring>
        <name>GetSimulationOwnerRel</name>
        <briefdescription>
<para>Single PhysicsScene that will simulate this body. </para>        </briefdescription>
        <detaileddescription>
<para>By default this is the first PhysicsScene found in the stage using UsdStage::Traverse(). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a5b4bb5ba556491f80c786ab4181b1dcd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdRelationship</type>
        <definition>USDPHYSICS_API UsdRelationship CreateSimulationOwnerRel</definition>
        <argsstring>() const </argsstring>
        <name>CreateSimulationOwnerRel</name>
        <briefdescription>
<para>See <ref refid="class_usd_physics_rigid_body_a_p_i_1a81caba58278bb184b5ed9d0aea85bde6" kindref="member">GetSimulationOwnerRel()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="277" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfTokenVector &amp;</type>
        <definition>static USDPHYSICS_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1aa15d907f70d37a89fe2ecab59020e312" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsRigidBodyAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/><ref refid="class_usd_physics_rigid_body_a_p_i_1ae1030adfd8e8ac466b5e9c741abcd456" kindref="member">UsdPhysicsRigidBodyAPI</ref>(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="107" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1adccc35ed7a674df7007bca566d3c0ebe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsRigidBodyAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysicsRigidBodyAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para><para><simplesect kind="return"><para>A valid <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_usd_physics_rigid_body_a_p_i" kindref="compound">UsdPhysicsRigidBodyAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="126" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdSchemaType</type>
        <definition>USDPHYSICS_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>static USDPHYSICS_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="141" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_physics_rigid_body_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>USDPHYSICS_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="145" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Applies physics body attributes to any UsdGeomXformable prim and marks that prim to be driven by a simulation. </para>    </briefdescription>
    <detaileddescription>
<para>If a simulation is running it will update this prim&apos;s pose. All prims in the hierarchy below this prim should move accordingly. </para>    </detaileddescription>
    <location file="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" line="61" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/rigidBodyAPI.h" bodystart="60" bodyend="290"/>
    <listofallmembers>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1adccc35ed7a674df7007bca566d3c0ebe" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>Apply</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1ae7e2685ac915c26d25fb3986e8de5376" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateAngularVelocityAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a2a12638822a2908014f07cae0e26dc72" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateKinematicEnabledAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1ac54f87a79abd85489a737672df53f65b" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateRigidBodyEnabledAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a5b4bb5ba556491f80c786ab4181b1dcd" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateSimulationOwnerRel</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a50ab83c2c806df43c6c8e3a4afa2e959" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateStartsAsleepAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1afb3226ba76f2f648b5fde366884a1290" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>CreateVelocityAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1aa15d907f70d37a89fe2ecab59020e312" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>Get</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1aba34f7d49bb685f74e1fb5a7080834c5" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetAngularVelocityAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a33affb75f58ed2bde4d6ba4e498fe345" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetKinematicEnabledAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a46366788843971ba1c27b8f5a08e09de" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetRigidBodyEnabledAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a81caba58278bb184b5ed9d0aea85bde6" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetSimulationOwnerRel</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1aaba566d3608fbc6a95eb5cbc2f03e7d9" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetStartsAsleepAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a42e5a0dfada2a8e0e798ae7c2da70805" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>GetVelocityAttr</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>schemaType</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1ae1030adfd8e8ac466b5e9c741abcd456" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>UsdPhysicsRigidBodyAPI</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1ae31a1453617bffe37e9a37d95a085a88" prot="public" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>UsdPhysicsRigidBodyAPI</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_physics_rigid_body_a_p_i_1a890360606c0f0d7eb748931b5ef2d139" prot="public" virt="virtual"><scope>UsdPhysicsRigidBodyAPI</scope><name>~UsdPhysicsRigidBodyAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
