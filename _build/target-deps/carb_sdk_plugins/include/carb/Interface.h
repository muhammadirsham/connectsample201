// Copyright (c) 2018-2021, NVIDIA CORPORATION. All rights reserved.
//
// NVIDIA CORPORATION and its licensors retain all intellectual property
// and proprietary rights in and to this software, related documentation
// and any modifications thereto. Any use, reproduction, disclosure or
// distribution of this software and related documentation without an express
// license agreement from NVIDIA CORPORATION is strictly prohibited.
//

//! @file
//!
//! @brief Macros for defining a Carbonite interface.
#pragma once

#include "Version.h"

namespace carb
{
//! Defines a descriptor for the plugin interface.
//!
//! In order to get this information from an interface, call the interface's `getInterfaceDesc` function.
struct InterfaceDesc
{
    const char* name = nullptr; //!< Name of the interface.
    Version version = { 0, 0 }; //!< Version of the interface.
};
} // namespace carb

//! Macro to declare a `struct` as a Carbonite interface.
//!
//! This macro must be called (as the first entity) in any struct that defines a Carbonite interface.
//!
//! @param name The name of the interface.
//!
//! @param major The major <a href="https://semver.org/">Semantic Version</a> of the interface.  It is recommended to
//! start at `1`.
//! @param minor The minor <a href="https://semver.org/">Semantic Version</a> of the interface.  It is recommended to
//! start at `0`.
//!
//! @note A @p major of `0` has special significance to <a href="https://semver.org/">Semantic Versioning</a>: every
//! iteration of @p minor is also considered a breaking change.
//!
//! @see See @inlinerst :ref:`Framework Overview <carb_framework>` @endrst for more inforation on how to use this macro.
#define CARB_PLUGIN_INTERFACE(name, major, minor)                                                                      \
    /**                                                                                                                \
     * Returns information about this interface. Auto-generated by CARB_PLUGIN_INTERFACE().                            \
     * @returns The carb::InterfaceDesc struct with information about this interface.                                  \
     */                                                                                                                \
    static carb::InterfaceDesc getInterfaceDesc()                                                                      \
    {                                                                                                                  \
        return carb::InterfaceDesc{ name, { major, minor } };                                                          \
    }

// note that this needs to be included last to avoid a circular include dependency in
// 'carb/Defines.h'.  A lot of source files and tests depend on 'carb/Interface.h'
// also pulling in 'carb/Defines.h'.  Since nothing here strictly requires 'Defines.h',
// we'll just defer it's include until everything else useful in here has been defined.
#include "Defines.h"
