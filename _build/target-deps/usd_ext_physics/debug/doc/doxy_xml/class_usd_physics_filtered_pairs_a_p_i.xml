<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_usd_physics_filtered_pairs_a_p_i" kind="class" prot="public">
    <compoundname>UsdPhysicsFilteredPairsAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="filtered_pairs_a_p_i_8h" local="no">filteredPairsAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_physics_filtered_pairs_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::SingleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="68" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_physics_filtered_pairs_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="139" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1abe43b36a780ac2739dca37cc9a917846" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsFilteredPairsAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>UsdPhysicsFilteredPairsAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_physics_filtered_pairs_a_p_i_1ab7df1207b97f2622b07081ab807ebbb7" kindref="member">UsdPhysicsFilteredPairsAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="74" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" bodystart="74" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1ae16419b7d634a6496cf226e910459dbf" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsFilteredPairsAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>UsdPhysicsFilteredPairsAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="82" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1ad21fef7871d091f8131e2b7e01637e13" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API</type>
        <definition>virtual USDPHYSICS_API ~UsdPhysicsFilteredPairsAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdPhysicsFilteredPairsAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="89" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a252806416ffc03540ce9a42a29f9ef2a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdRelationship</type>
        <definition>USDPHYSICS_API UsdRelationship GetFilteredPairsRel</definition>
        <argsstring>() const </argsstring>
        <name>GetFilteredPairsRel</name>
        <briefdescription>
<para>Relationship to objects that should be filtered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a7d6bc1fec25eecb750e855ba86f3b887" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdRelationship</type>
        <definition>USDPHYSICS_API UsdRelationship CreateFilteredPairsRel</definition>
        <argsstring>() const </argsstring>
        <name>CreateFilteredPairsRel</name>
        <briefdescription>
<para>See <ref refid="class_usd_physics_filtered_pairs_a_p_i_1a252806416ffc03540ce9a42a29f9ef2a" kindref="member">GetFilteredPairsRel()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="161" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfTokenVector &amp;</type>
        <definition>static USDPHYSICS_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1ab7df1207b97f2622b07081ab807ebbb7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsFilteredPairsAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/><ref refid="class_usd_physics_filtered_pairs_a_p_i_1abe43b36a780ac2739dca37cc9a917846" kindref="member">UsdPhysicsFilteredPairsAPI</ref>(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a64f19b5c05d6ab3b8cb7624ac67546d9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsFilteredPairsAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysicsFilteredPairsAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para><para><simplesect kind="return"><para>A valid <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_usd_physics_filtered_pairs_a_p_i" kindref="compound">UsdPhysicsFilteredPairsAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="128" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdSchemaType</type>
        <definition>USDPHYSICS_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="135" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>static USDPHYSICS_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_physics_filtered_pairs_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>USDPHYSICS_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="147" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>API to describe fine-grained filtering. </para>    </briefdescription>
    <detaileddescription>
<para>If a collision between two objects occurs, this pair might be filtered if the pair is defined through this API. This API can be applied either to a body or collision or even articulation. The &quot;filteredPairs&quot; defines what objects it should not collide against. Note that FilteredPairsAPI filtering has precedence over CollisionGroup filtering. </para>    </detaileddescription>
    <location file="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" line="63" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/filteredPairsAPI.h" bodystart="62" bodyend="174"/>
    <listofallmembers>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a64f19b5c05d6ab3b8cb7624ac67546d9" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>Apply</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a7d6bc1fec25eecb750e855ba86f3b887" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>CreateFilteredPairsRel</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1ab7df1207b97f2622b07081ab807ebbb7" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>Get</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a252806416ffc03540ce9a42a29f9ef2a" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>GetFilteredPairsRel</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1a7cad138857a9fbc4db1a366dc8168d90" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>schemaType</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1abe43b36a780ac2739dca37cc9a917846" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>UsdPhysicsFilteredPairsAPI</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1ae16419b7d634a6496cf226e910459dbf" prot="public" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>UsdPhysicsFilteredPairsAPI</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_physics_filtered_pairs_a_p_i_1ad21fef7871d091f8131e2b7e01637e13" prot="public" virt="virtual"><scope>UsdPhysicsFilteredPairsAPI</scope><name>~UsdPhysicsFilteredPairsAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
