<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_physx_schema_physx_particle_cloth_a_p_i" kind="class" prot="public">
    <compoundname>PhysxSchemaPhysxParticleClothAPI</compoundname>
    <basecompoundref refid="class_physx_schema_physx_particle_a_p_i" prot="public" virt="non-virtual">PhysxSchemaPhysxParticleAPI</basecompoundref>
    <includes refid="physx_particle_cloth_a_p_i_8h" local="no">physxParticleClothAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_physx_schema_physx_particle_cloth_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::SingleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="64" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_physx_schema_physx_particle_cloth_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="135" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a0e81936e1813240dcea8e1b3cc570696" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxParticleClothAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>PhysxSchemaPhysxParticleClothAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1a947bb8d1c100f0273a6f4ecc15e732c3" kindref="member">PhysxSchemaPhysxParticleClothAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="70" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ac23f7415b30f4fdcedbbfd8ab083e0e4" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxParticleClothAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>PhysxSchemaPhysxParticleClothAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="78" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" bodystart="78" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a47505b9c1cfa11adc86c98b46b732cf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>PHYSXSCHEMA_API</type>
        <definition>virtual PHYSXSCHEMA_API ~PhysxSchemaPhysxParticleClothAPI</definition>
        <argsstring>()</argsstring>
        <name>~PhysxSchemaPhysxParticleClothAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="85" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1aa6ae7ce7641dffd6a1c3a5458bebf2ac" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSelfCollisionFilterAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSelfCollisionFilterAttr</name>
        <briefdescription>
<para>Whether the simulation should filter particle-particle collisions based on their rest position distances. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>bool physxParticle:selfCollisionFilter = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="157" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ab7729b123bdb78411a6c7e988529bdbb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSelfCollisionFilterAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSelfCollisionFilterAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1aa6ae7ce7641dffd6a1c3a5458bebf2ac" kindref="member">GetSelfCollisionFilterAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a36cae7fb08e5aaa9a8b6e1e5b0b80083" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetRestPointsAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetRestPointsAttr</name>
        <briefdescription>
<para>Particle positions in cloth rest configuration. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>point3f[] physxParticle:restPoints</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>VtArray&lt;GfVec3f&gt; </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Point3fArray </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="179" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a5a46d126ead1b4876bb7aaca28cc15af" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateRestPointsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateRestPointsAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1a36cae7fb08e5aaa9a8b6e1e5b0b80083" kindref="member">GetRestPointsAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="187" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ac8df3cb215bc2540d43beb6e3acaf96a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSpringIndicesAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSpringIndicesAttr</name>
        <briefdescription>
<para>List of index pairs describing which points are connected by spring constraints. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="5" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>uniform int2[] physxParticle:springIndices</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>VtArray&lt;GfVec2i&gt; </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Int2Array </para></entry></row>
<row>
<entry thead="no"><para>Variability </para></entry><entry thead="no"><para>SdfVariabilityUniform </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a5e989fc967545534faa490ed19d88129" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSpringIndicesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSpringIndicesAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1ac8df3cb215bc2540d43beb6e3acaf96a" kindref="member">GetSpringIndicesAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="210" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ab2740fd6d3a9ba080fea7689da720827" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSpringStiffnessesAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSpringStiffnessesAttr</name>
        <briefdescription>
<para>Stiffness values for linear-distance springs between a pair of particles as defined by index pairs in springIndices. </para>        </briefdescription>
        <detaileddescription>
<para>Range: [0, inf) Units: force / distance = mass / second / second</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float[] physxParticle:springStiffnesses</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>VtArray&lt;float&gt; </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a3345ba41166cb0d4ab9b97a88f585e4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSpringStiffnessesAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSpringStiffnessesAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1ab2740fd6d3a9ba080fea7689da720827" kindref="member">GetSpringStiffnessesAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="234" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a0fb471df91c733f6ba03947c890fb508" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSpringDampingsAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSpringDampingsAttr</name>
        <briefdescription>
<para>Coefficients for linear-distance dampers between a pair of particles as defined by index pairs in springIndices. </para>        </briefdescription>
        <detaileddescription>
<para>Range: [0, inf) Units: force * second / distance = mass / second</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float[] physxParticle:springDampings</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>VtArray&lt;float&gt; </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="250" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a706c7db9eaba6a489d664aa4e95d4237" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSpringDampingsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSpringDampingsAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1a0fb471df91c733f6ba03947c890fb508" kindref="member">GetSpringDampingsAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ae95e5e3507cd60e014c1fef0a66f98ab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSpringRestLengthsAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSpringRestLengthsAttr</name>
        <briefdescription>
<para>Spring rest lengths corresponding to spring index pairs. </para>        </briefdescription>
        <detaileddescription>
<para>Range: (-inf, inf) Units: distance</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float[] physxParticle:springRestLengths</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>VtArray&lt;float&gt; </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;FloatArray </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a9ba073e7adc7a6ce5be7eaf228455a4c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSpringRestLengthsAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSpringRestLengthsAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1ae95e5e3507cd60e014c1fef0a66f98ab" kindref="member">GetSpringRestLengthsAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="282" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a4a38c348d3e6e052ab65b23e1bcfb0fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetPressureAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetPressureAttr</name>
        <briefdescription>
<para>Pressure: If &gt; 0, a particle cloth has an additional pressure constraint that provides inflatable (i.e. </para>        </briefdescription>
        <detaileddescription>
<para>balloon-like) dynamics. The pressure times the rest volume defines the volume the inflatable tries to match. Pressure only works well for closed or approximately closed meshes. Range: [0, inf) Units: dimensionless</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxParticle:pressure = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="300" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a1630c1a895795da21d2bc328ec15a7ad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreatePressureAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreatePressureAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1a4a38c348d3e6e052ab65b23e1bcfb0fd" kindref="member">GetPressureAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="308" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfTokenVector &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a947bb8d1c100f0273a6f4ecc15e732c3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxParticleClothAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/><ref refid="class_physx_schema_physx_particle_cloth_a_p_i_1a0e81936e1813240dcea8e1b3cc570696" kindref="member">PhysxSchemaPhysxParticleClothAPI</ref>(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a920737462609ef6d7571f4f80a2a0c2e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxParticleClothAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysxParticleClothAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para><para><simplesect kind="return"><para>A valid <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_physx_schema_physx_particle_cloth_a_p_i" kindref="compound">PhysxSchemaPhysxParticleClothAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="124" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdSchemaType</type>
        <definition>PHYSXSCHEMA_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="131" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_physx_schema_physx_particle_cloth_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>PHYSXSCHEMA_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="143" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Applied to a UsdGeomMesh. </para>    </briefdescription>
    <detaileddescription>
<para>The mesh is simulated as a particle-based cloth or inflatable, depending on the mesh geometry and the pressure attribute. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="202">
        <label>PhysxSchemaPhysxParticleAPI</label>
        <link refid="class_physx_schema_physx_particle_a_p_i"/>
      </node>
      <node id="201">
        <label>PhysxSchemaPhysxParticleClothAPI</label>
        <link refid="class_physx_schema_physx_particle_cloth_a_p_i"/>
        <childnode refid="202" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="204">
        <label>PhysxSchemaPhysxParticleAPI</label>
        <link refid="class_physx_schema_physx_particle_a_p_i"/>
      </node>
      <node id="203">
        <label>PhysxSchemaPhysxParticleClothAPI</label>
        <link refid="class_physx_schema_physx_particle_cloth_a_p_i"/>
        <childnode refid="204" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" line="59" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxParticleClothAPI.h" bodystart="58" bodyend="321"/>
    <listofallmembers>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>_GetTfType</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a920737462609ef6d7571f4f80a2a0c2e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>Apply</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a840ea43f997fd996a64fbf9d1656eeb6" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateParticleEnabledAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a0e7b3b47336be3998ed625deb2bbbf2f" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateParticleGroupAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a84af4be252fe89b0800cd864678f5fae" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateParticleSystemRel</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a1630c1a895795da21d2bc328ec15a7ad" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreatePressureAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a5a46d126ead1b4876bb7aaca28cc15af" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateRestPointsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a76a2a5b07990d1b84c2a1a48f97863db" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSelfCollisionAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ab7729b123bdb78411a6c7e988529bdbb" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSelfCollisionFilterAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a706c7db9eaba6a489d664aa4e95d4237" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSpringDampingsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a5e989fc967545534faa490ed19d88129" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSpringIndicesAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a9ba073e7adc7a6ce5be7eaf228455a4c" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSpringRestLengthsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a3345ba41166cb0d4ab9b97a88f585e4b" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>CreateSpringStiffnessesAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a947bb8d1c100f0273a6f4ecc15e732c3" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>Get</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a747d34816fbfc39b152b9e95e31d3643" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetParticleEnabledAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a1f9a174dcf67fa8efda9fc10b01e0926" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetParticleGroupAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a89b087ad7386819f46b0e6d44e5d5c1e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetParticleSystemRel</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a4a38c348d3e6e052ab65b23e1bcfb0fd" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetPressureAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a36cae7fb08e5aaa9a8b6e1e5b0b80083" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetRestPointsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a450a95c32008a00397d4b252d705d7ff" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSelfCollisionAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1aa6ae7ce7641dffd6a1c3a5458bebf2ac" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSelfCollisionFilterAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a0fb471df91c733f6ba03947c890fb508" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSpringDampingsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ac8df3cb215bc2540d43beb6e3acaf96a" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSpringIndicesAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ae95e5e3507cd60e014c1fef0a66f98ab" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSpringRestLengthsAttr</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ab2740fd6d3a9ba080fea7689da720827" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>GetSpringStiffnessesAttr</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1aafc85d221d2c72fb32cf9a3b5fd55605" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>PhysxSchemaPhysxParticleAPI</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1ad48e3699a5f7426fdbf105e0da9e08b4" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>PhysxSchemaPhysxParticleAPI</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a0e81936e1813240dcea8e1b3cc570696" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>PhysxSchemaPhysxParticleClothAPI</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1ac23f7415b30f4fdcedbbfd8ab083e0e4" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>PhysxSchemaPhysxParticleClothAPI</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>schemaType</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_physx_schema_physx_particle_a_p_i_1a5660b4cf2a73c6bdd915f332b9f7e190" prot="public" virt="virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>~PhysxSchemaPhysxParticleAPI</name></member>
      <member refid="class_physx_schema_physx_particle_cloth_a_p_i_1a47505b9c1cfa11adc86c98b46b732cf1" prot="public" virt="virtual"><scope>PhysxSchemaPhysxParticleClothAPI</scope><name>~PhysxSchemaPhysxParticleClothAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
