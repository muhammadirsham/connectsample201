<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_usd_physics_limit_a_p_i" kind="class" prot="public">
    <compoundname>UsdPhysicsLimitAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="limit_a_p_i_8h" local="no">limitAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_usd_physics_limit_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::MultipleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="69" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_usd_physics_limit_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="181" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="181" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1ad8901f8aac4f3d88e10c4f1a4d3f897c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsLimitAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim(), const TfToken &amp;name=TfToken())</argsstring>
        <name>UsdPhysicsLimitAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
          <defval>TfToken()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> with name <computeroutput>name</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_usd_physics_limit_a_p_i_1a29ab21a424ba71e599306663b252519f" kindref="member">UsdPhysicsLimitAPI::Get</ref>( prim.GetStage(), prim.GetPath().AppendProperty( &quot;limit:name&quot;));</para><para>for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="80" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="80" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a19d065f012ff3d2b75211b94cea7c407" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>UsdPhysicsLimitAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj, const TfToken &amp;name)</argsstring>
        <name>UsdPhysicsLimitAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> with name <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref>(schemaObj.GetPrim(), name), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="89" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1af0d90fd1c3c20b0f6eac9256f07a48fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>USDPHYSICS_API</type>
        <definition>virtual USDPHYSICS_API ~UsdPhysicsLimitAPI</definition>
        <argsstring>()</argsstring>
        <name>~UsdPhysicsLimitAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1aa53b87421fbc15993adfd11e9b2045eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TfToken</type>
        <definition>TfToken GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the name of this multiple-apply schema instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="109" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a9ce83ddb32cb7b167d8159a24a691c54" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetLowAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetLowAttr</name>
        <briefdescription>
<para>Lower limit. </para>        </briefdescription>
        <detaileddescription>
<para>Units: degrees or distance depending on trans or rot axis applied to. -inf means not limited in negative direction.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physics:low = -inf</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a7e292d59f9140852cc083c1876a94919" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateLowAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateLowAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_limit_a_p_i_1a9ce83ddb32cb7b167d8159a24a691c54" kindref="member">GetLowAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="212" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a7b1e0647f327c575927ea6fe15c7033a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute GetHighAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetHighAttr</name>
        <briefdescription>
<para>Upper limit. </para>        </briefdescription>
        <detaileddescription>
<para>Units: degrees or distance depending on trans or rot axis applied to. inf means not limited in positive direction.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physics:high = inf</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a9575c178b65c881b55106c6fbca87e05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdAttribute</type>
        <definition>USDPHYSICS_API UsdAttribute CreateHighAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateHighAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_usd_physics_limit_a_p_i_1a7b1e0647f327c575927ea6fe15c7033a" kindref="member">GetHighAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="235" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1ae5d92a5564c6edecfbadab58dcc16fc4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfTokenVector &amp;</type>
        <definition>static USDPHYSICS_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true, const TfToken instanceName=TfToken())</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const TfToken</type>
          <declname>instanceName</declname>
          <defval>TfToken()</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes for a given instance name. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. The names returned will have the proper namespace prefix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="105" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a29ab21a424ba71e599306663b252519f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsLimitAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. <computeroutput>path</computeroutput> must be of the format &lt;path&gt;.limit:name .</para><para>This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/>TfToken<sp/>name<sp/>=<sp/>SdfPath::StripNamespace(path.GetToken());</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><ref refid="class_usd_physics_limit_a_p_i_1ad8901f8aac4f3d88e10c4f1a4d3f897c" kindref="member">UsdPhysicsLimitAPI</ref>(</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/>stage-&gt;GetPrimAtPath(path.GetPrimPath()),<sp/>name);</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1ac1db7cccc92af515dd32014920a4d437" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsLimitAPI Get</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;name)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> with name <computeroutput>name</computeroutput> holding the prim <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Shorthand for <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI(prim, name)</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="135" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a1626b8e8941af374f2c3821ecf45f02b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API bool</type>
        <definition>static USDPHYSICS_API bool IsSchemaPropertyBaseName</definition>
        <argsstring>(const TfToken &amp;baseName)</argsstring>
        <name>IsSchemaPropertyBaseName</name>
        <param>
          <type>const TfToken &amp;</type>
          <declname>baseName</declname>
        </param>
        <briefdescription>
<para>Checks if the given name <computeroutput>baseName</computeroutput> is the base name of a property of PhysicsLimitAPI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1ad7156d55f911af2503f8b331672b066f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API bool</type>
        <definition>static USDPHYSICS_API bool IsPhysicsLimitAPIPath</definition>
        <argsstring>(const SdfPath &amp;path, TfToken *name)</argsstring>
        <name>IsPhysicsLimitAPIPath</name>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>TfToken *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if the given path <computeroutput>path</computeroutput> is of an API schema of type PhysicsLimitAPI. </para>        </briefdescription>
        <detaileddescription>
<para>If so, it stores the instance name of the schema in <computeroutput>name</computeroutput> and returns true. Otherwise, it returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a78e933a4e6012154ccf7c88433ffdd2a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref></type>
        <definition>static USDPHYSICS_API UsdPhysicsLimitAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;name)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>multiple-apply</bold> API schema to the given <computeroutput>prim</computeroutput> along with the given instance name, <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysicsLimitAPI:&lt;i&gt;name&lt;/i&gt;&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim. For example, if <computeroutput>name</computeroutput> is &apos;instance1&apos;, the token &apos;PhysicsLimitAPI:instance1&apos; is added to &apos;apiSchemas&apos;.</para><para><simplesect kind="return"><para>A valid <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_usd_physics_limit_a_p_i" kindref="compound">UsdPhysicsLimitAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="170" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API UsdSchemaType</type>
        <definition>USDPHYSICS_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="177" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>static USDPHYSICS_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="183" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="185" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_usd_physics_limit_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>USDPHYSICS_API const TfType &amp;</type>
        <definition>USDPHYSICS_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="189" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The PhysicsLimitAPI can be applied to a PhysicsJoint and will restrict the movement along an axis. </para>    </briefdescription>
    <detaileddescription>
<para>PhysicsLimitAPI is a multipleApply schema: The PhysicsJoint can be restricted along &quot;transX&quot;, &quot;transY&quot;, &quot;transZ&quot;, &quot;rotX&quot;, &quot;rotY&quot;, &quot;rotZ&quot;, &quot;distance&quot;. Setting these as a multipleApply schema TfToken name will define the degree of freedom the PhysicsLimitAPI is applied to. Note that if the low limit is higher than the high limit, motion along this axis is considered locked. </para>    </detaileddescription>
    <location file="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" line="64" column="1" bodyfile="W:/919a5455eee1e83c/src/usdPhysics/limitAPI.h" bodystart="63" bodyend="248"/>
    <listofallmembers>
      <member refid="class_usd_physics_limit_a_p_i_1a14550550753e6be849eb8e7d9607f2d5" prot="protected" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1adade0ff4639afd184e30c5708ae86f8d" prot="private" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a96538019a0566b8f54f05953ac1c6615" prot="private" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>_GetTfType</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a78e933a4e6012154ccf7c88433ffdd2a" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>Apply</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a9575c178b65c881b55106c6fbca87e05" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>CreateHighAttr</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a7e292d59f9140852cc083c1876a94919" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>CreateLowAttr</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a29ab21a424ba71e599306663b252519f" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>Get</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1ac1db7cccc92af515dd32014920a4d437" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>Get</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a7b1e0647f327c575927ea6fe15c7033a" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>GetHighAttr</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a9ce83ddb32cb7b167d8159a24a691c54" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>GetLowAttr</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1aa53b87421fbc15993adfd11e9b2045eb" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>GetName</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1ae5d92a5564c6edecfbadab58dcc16fc4" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1ad7156d55f911af2503f8b331672b066f" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>IsPhysicsLimitAPIPath</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a1626b8e8941af374f2c3821ecf45f02b" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>IsSchemaPropertyBaseName</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>schemaType</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1ad8901f8aac4f3d88e10c4f1a4d3f897c" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>UsdPhysicsLimitAPI</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1a19d065f012ff3d2b75211b94cea7c407" prot="public" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>UsdPhysicsLimitAPI</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>UsdPhysicsLimitAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_usd_physics_limit_a_p_i_1af0d90fd1c3c20b0f6eac9256f07a48fe" prot="public" virt="virtual"><scope>UsdPhysicsLimitAPI</scope><name>~UsdPhysicsLimitAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
