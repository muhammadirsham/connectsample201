<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_physx_schema_physx_vehicle_controller_a_p_i" kind="class" prot="public">
    <compoundname>PhysxSchemaPhysxVehicleControllerAPI</compoundname>
    <basecompoundref prot="public" virt="non-virtual">UsdAPISchemaBase</basecompoundref>
    <includes refid="physx_vehicle_controller_a_p_i_8h" local="no">physxVehicleControllerAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_physx_schema_physx_vehicle_controller_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::SingleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="63" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_physx_schema_physx_vehicle_controller_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="134" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" bodystart="134" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a86752cb1af7f81ce2f5e8bfb92ba8062" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxVehicleControllerAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim())</argsstring>
        <name>PhysxSchemaPhysxVehicleControllerAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ad8dfd092d5d2728ec50afdcfa4c10a6e" kindref="member">PhysxSchemaPhysxVehicleControllerAPI::Get</ref>(prim.GetStage(), prim.GetPath()) for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="69" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a49841f67407081d79e347fc241862762" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxVehicleControllerAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj)</argsstring>
        <name>PhysxSchemaPhysxVehicleControllerAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref>(schemaObj.GetPrim()), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="77" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a1f7e14a355a80ff1d846b407128a116b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>PHYSXSCHEMA_API</type>
        <definition>virtual PHYSXSCHEMA_API ~PhysxSchemaPhysxVehicleControllerAPI</definition>
        <argsstring>()</argsstring>
        <name>~PhysxSchemaPhysxVehicleControllerAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="84" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1aa8228bcc52a8315280bb3ea75bf61e21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetAcceleratorAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetAcceleratorAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Throttle input, 0.0 to 1.0.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleController:accelerator = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1ac82fc13d2a8088c7feab5d600778339a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateAcceleratorAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateAcceleratorAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aa8228bcc52a8315280bb3ea75bf61e21" kindref="member">GetAcceleratorAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a99e13b27e2a54c4e0a3a3d2be8eefef5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetBrakeAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetBrakeAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Brake input, 0.0 to 1.0.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleController:brake = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="178" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a879e622c7c386fdbfee6201b4e5b8374" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateBrakeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateBrakeAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a99e13b27e2a54c4e0a3a3d2be8eefef5" kindref="member">GetBrakeAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a4c274e4f8a425425e6d4da80ea39205f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetHandbrakeAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetHandbrakeAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Handbrake input, 0.0 to 1.0.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleController:handbrake = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a389f00c4d38b6a4e4be5c7fc6c523956" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateHandbrakeAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateHandbrakeAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a4c274e4f8a425425e6d4da80ea39205f" kindref="member">GetHandbrakeAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="208" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a1f1dd4eef8fe8bbfc118e32086572ba1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSteerLeftAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSteerLeftAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Left steering input. 0.0 to 1.0. Net steering is the aggregate of steerRight and steerLeft.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleController:steerLeft = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="222" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1ae379479a08cd4705da67f5061a4d844b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSteerLeftAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSteerLeftAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a1f1dd4eef8fe8bbfc118e32086572ba1" kindref="member">GetSteerLeftAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1ab06f5df8799fbf783a830b1fd0da24bd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetSteerRightAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetSteerRightAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Right steering input, 0.0 to 1.0. Net steering is the aggregate of steerRight and steerLeft.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float physxVehicleController:steerRight = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="244" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a5b6a6b31f270934c5c1ecc2c5ece0417" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateSteerRightAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateSteerRightAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ab06f5df8799fbf783a830b1fd0da24bd" kindref="member">GetSteerRightAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="252" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1aabcf3a32acb83926fd9d9664df712b1d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetAutomaticAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetAutomaticAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>true = Vehicle automatically shifts gears, false = Manual gear shifts.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>bool physxVehicleController:automatic = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="266" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a07e597f037000a1ba1e1fed5043a376f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateAutomaticAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateAutomaticAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aabcf3a32acb83926fd9d9664df712b1d" kindref="member">GetAutomaticAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a90257d630165f597e1f05aeb9a34dd89" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetTargetGearAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetTargetGearAttr</name>
        <briefdescription>
<para>Driven vehicle. </para>        </briefdescription>
        <detaileddescription>
<para>Desired gear to shift into directly. -1 = Reverse, 0 = Neutral, 1 and up = Drive. Only active in manual.</para><para>Note: please be aware that this definition differs from the PhysX vehicle API.</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>int physxVehicleController:targetGear = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>int </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Int </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="290" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a52b2a726b842d280aa219eca8be28c3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateTargetGearAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateTargetGearAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a90257d630165f597e1f05aeb9a34dd89" kindref="member">GetTargetGearAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="298" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfTokenVector &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true)</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1ad8dfd092d5d2728ec50afdcfa4c10a6e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxVehicleControllerAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/><ref refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a86752cb1af7f81ce2f5e8bfb92ba8062" kindref="member">PhysxSchemaPhysxVehicleControllerAPI</ref>(stage-&gt;GetPrimAtPath(path));</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a9d56b7b91aa5b6d57d404f983e86e9ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxVehicleControllerAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>single-apply</bold> API schema to the given <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysxVehicleControllerAPI&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim.</para><para><simplesect kind="return"><para>A valid <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_physx_schema_physx_vehicle_controller_a_p_i" kindref="compound">PhysxSchemaPhysxVehicleControllerAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="123" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdSchemaType</type>
        <definition>PHYSXSCHEMA_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="130" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="138" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_physx_schema_physx_vehicle_controller_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>PHYSXSCHEMA_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="142" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>PhysX vehicle controller that samples user input to drive the vehicle. </para>    </briefdescription>
    <detaileddescription>
<para>Has to be applied to a prim with PhysxVehicleAPI applied. </para>    </detaileddescription>
    <location file="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" line="58" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxVehicleControllerAPI.h" bodystart="57" bodyend="311"/>
    <listofallmembers>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>_GetTfType</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a9d56b7b91aa5b6d57d404f983e86e9ba" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>Apply</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ac82fc13d2a8088c7feab5d600778339a" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateAcceleratorAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a07e597f037000a1ba1e1fed5043a376f" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateAutomaticAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a879e622c7c386fdbfee6201b4e5b8374" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateBrakeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a389f00c4d38b6a4e4be5c7fc6c523956" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateHandbrakeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ae379479a08cd4705da67f5061a4d844b" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateSteerLeftAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a5b6a6b31f270934c5c1ecc2c5ece0417" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateSteerRightAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a52b2a726b842d280aa219eca8be28c3e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>CreateTargetGearAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ad8dfd092d5d2728ec50afdcfa4c10a6e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>Get</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aa8228bcc52a8315280bb3ea75bf61e21" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetAcceleratorAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aabcf3a32acb83926fd9d9664df712b1d" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetAutomaticAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a99e13b27e2a54c4e0a3a3d2be8eefef5" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetBrakeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a4c274e4f8a425425e6d4da80ea39205f" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetHandbrakeAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a4acc8a487a53fd3129d77bb286d75140" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a1f1dd4eef8fe8bbfc118e32086572ba1" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetSteerLeftAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1ab06f5df8799fbf783a830b1fd0da24bd" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetSteerRightAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a90257d630165f597e1f05aeb9a34dd89" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>GetTargetGearAttr</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a86752cb1af7f81ce2f5e8bfb92ba8062" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>PhysxSchemaPhysxVehicleControllerAPI</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a49841f67407081d79e347fc241862762" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>PhysxSchemaPhysxVehicleControllerAPI</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>schemaType</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_physx_schema_physx_vehicle_controller_a_p_i_1a1f7e14a355a80ff1d846b407128a116b" prot="public" virt="virtual"><scope>PhysxSchemaPhysxVehicleControllerAPI</scope><name>~PhysxSchemaPhysxVehicleControllerAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
