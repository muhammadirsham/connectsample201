<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.5">
  <compounddef id="class_physx_schema_physx_tendon_axis_root_a_p_i" kind="class" prot="public">
    <compoundname>PhysxSchemaPhysxTendonAxisRootAPI</compoundname>
    <basecompoundref refid="class_physx_schema_physx_tendon_axis_a_p_i" prot="public" virt="non-virtual">PhysxSchemaPhysxTendonAxisAPI</basecompoundref>
    <includes refid="physx_tendon_axis_root_a_p_i_8h" local="no">physxTendonAxisRootAPI.h</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" static="yes" mutable="no">
        <type>const UsdSchemaType</type>
        <definition>const UsdSchemaType schemaType</definition>
        <argsstring></argsstring>
        <name>schemaType</name>
        <initializer>= UsdSchemaType::MultipleApplyAPI</initializer>
        <briefdescription>
<para>Compile time constant representing what kind of schema this class is. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="125" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class UsdSchemaRegistry</definition>
        <argsstring></argsstring>
        <name>UsdSchemaRegistry</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="237" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="237" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae6b8434ca1cfc514066c2c9449110feb" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxTendonAxisRootAPI</definition>
        <argsstring>(const UsdPrim &amp;prim=UsdPrim(), const TfToken &amp;name=TfToken())</argsstring>
        <name>PhysxSchemaPhysxTendonAxisRootAPI</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
          <defval>UsdPrim()</defval>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
          <defval>TfToken()</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> on UsdPrim <computeroutput>prim</computeroutput> with name <computeroutput>name</computeroutput> . </para>        </briefdescription>
        <detaileddescription>
<para>Equivalent to <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a79c3fa7201f316f28fbb611c9c316034" kindref="member">PhysxSchemaPhysxTendonAxisRootAPI::Get</ref>( prim.GetStage(), prim.GetPath().AppendProperty( &quot;physxTendon:name&quot;));</para><para>for a <emphasis>valid</emphasis> <computeroutput>prim</computeroutput>, but will not immediately throw an error for an invalid <computeroutput>prim</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="136" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae1cd7e453c64a44502751262511e90a7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>PhysxSchemaPhysxTendonAxisRootAPI</definition>
        <argsstring>(const UsdSchemaBase &amp;schemaObj, const TfToken &amp;name)</argsstring>
        <name>PhysxSchemaPhysxTendonAxisRootAPI</name>
        <param>
          <type>const UsdSchemaBase &amp;</type>
          <declname>schemaObj</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> on the prim held by <computeroutput>schemaObj</computeroutput> with name <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Should be preferred over <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref>(schemaObj.GetPrim(), name), as it preserves SchemaBase state. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="145" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aea7c408ff484f2105fe30cf69a20c6be" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>PHYSXSCHEMA_API</type>
        <definition>virtual PHYSXSCHEMA_API ~PhysxSchemaPhysxTendonAxisRootAPI</definition>
        <argsstring>()</argsstring>
        <name>~PhysxSchemaPhysxTendonAxisRootAPI</name>
        <briefdescription>
<para>Destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa53b87421fbc15993adfd11e9b2045eb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>TfToken</type>
        <definition>TfToken GetName</definition>
        <argsstring>() const </argsstring>
        <name>GetName</name>
        <briefdescription>
<para>Returns the name of this multiple-apply schema instance. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="165" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a5c5a2bc23b56ea80a76850615253c450" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetStiffnessAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetStiffnessAttr</name>
        <briefdescription>
<para>Tendon length spring stiffness. </para>        </briefdescription>
        <detaileddescription>
<para>Range [0, inf). Units: force / distance = mass / time / time</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float stiffness = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ab7d259ee6d127ebfa67130f495bc2349" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateStiffnessAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateStiffnessAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a5c5a2bc23b56ea80a76850615253c450" kindref="member">GetStiffnessAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="268" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa2b0bd46cc807dcfea6fd32438e18f03" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetDampingAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetDampingAttr</name>
        <briefdescription>
<para>Tendon length damping. </para>        </briefdescription>
        <detaileddescription>
<para>Range [0, inf). Units: force / distance * time = mass / time</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float damping = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="283" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a155bfc53565dfdd638d2591f4ba5292f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateDampingAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateDampingAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa2b0bd46cc807dcfea6fd32438e18f03" kindref="member">GetDampingAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae286d50608e53f8e8d7cb14720ea0411" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetLimitStiffnessAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetLimitStiffnessAttr</name>
        <briefdescription>
<para>Tendon length-limit spring stiffness. </para>        </briefdescription>
        <detaileddescription>
<para>Range [0, inf). Units: force / distance = mass / time / time</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float limitStiffness = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="306" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a801895da22cf48e24e59513921c67ef4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateLimitStiffnessAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateLimitStiffnessAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae286d50608e53f8e8d7cb14720ea0411" kindref="member">GetLimitStiffnessAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a25304ea511b8e5fe1d3e0cea9d6ef9eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetOffsetAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetOffsetAttr</name>
        <briefdescription>
<para>Tendon length offset. </para>        </briefdescription>
        <detaileddescription>
<para>Range (-inf, inf). Units: distance</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float offset = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="329" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a377e35cc5425deec9c911737065f27d2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateOffsetAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateOffsetAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a25304ea511b8e5fe1d3e0cea9d6ef9eb" kindref="member">GetOffsetAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="337" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1afd58738ea12e3f1d4eb85e247d871eff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetRestLengthAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetRestLengthAttr</name>
        <briefdescription>
<para>Tendon rest length. </para>        </briefdescription>
        <detaileddescription>
<para>Range (-inf, inf). Units: distance</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float restLength = 0</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a7e8b47b32dd15752c79995fba2402818" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateRestLengthAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateRestLengthAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1afd58738ea12e3f1d4eb85e247d871eff" kindref="member">GetRestLengthAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="360" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a20f7b202e8c2e6c10846876344265f8e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetLowerLimitAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetLowerLimitAttr</name>
        <briefdescription>
<para>Tendon length lower limit. </para>        </briefdescription>
        <detaileddescription>
<para>Range (-inf, upperLimit]. Units: distance</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float lowerLimit = -inf</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="375" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a6fe6f32b81daf020c3954bc10bc0f5bf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateLowerLimitAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateLowerLimitAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a20f7b202e8c2e6c10846876344265f8e" kindref="member">GetLowerLimitAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="383" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1af6b8d4e35b564796622b8bccb3c3acba" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetUpperLimitAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetUpperLimitAttr</name>
        <briefdescription>
<para>Tendon length upper limit. </para>        </briefdescription>
        <detaileddescription>
<para>Range [lowerLimit, inf). Units: distance</para><para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>float upperLimit = inf</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>float </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Float </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="398" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a6355f453802dca57cf793c2ed95a0dd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateUpperLimitAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateUpperLimitAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1af6b8d4e35b564796622b8bccb3c3acba" kindref="member">GetUpperLimitAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="406" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a74cc1178e0f1893aeaf7bd8b5d350ea0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute GetTendonEnabledAttr</definition>
        <argsstring>() const </argsstring>
        <name>GetTendonEnabledAttr</name>
        <briefdescription>
<para>Enables/disables the tendon from contributing to the articulation dynamics. </para>        </briefdescription>
        <detaileddescription>
<para><table rows="4" cols="2"><row>
<entry thead="yes"><para></para></entry><entry thead="yes"><para></para></entry></row>
<row>
<entry thead="no"><para>Declaration </para></entry><entry thead="no"><para><computeroutput>bool tendonEnabled = 1</computeroutput> </para></entry></row>
<row>
<entry thead="no"><para>C++ Type </para></entry><entry thead="no"><para>bool </para></entry></row>
<row>
<entry thead="no"><para>Usd Type </para></entry><entry thead="no"><para>SdfValueTypeNames-&gt;Bool </para></entry></row>
</table>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="420" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ab0ac6fadaad922926bf918b8c21b3470" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdAttribute</type>
        <definition>PHYSXSCHEMA_API UsdAttribute CreateTendonEnabledAttr</definition>
        <argsstring>(VtValue const &amp;defaultValue=VtValue(), bool writeSparsely=false) const </argsstring>
        <name>CreateTendonEnabledAttr</name>
        <param>
          <type>VtValue const &amp;</type>
          <declname>defaultValue</declname>
          <defval>VtValue()</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>writeSparsely</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>See <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a74cc1178e0f1893aeaf7bd8b5d350ea0" kindref="member">GetTendonEnabledAttr()</ref>, and also Usd_Create_Or_Get_Property for when to use Get vs Create. </para>        </briefdescription>
        <detaileddescription>
<para>If specified, author <computeroutput>defaultValue</computeroutput> as the attribute&apos;s default, sparsely (when it makes sense to do so) if <computeroutput>writeSparsely</computeroutput> is <computeroutput>true</computeroutput> - the default for <computeroutput>writeSparsely</computeroutput> is <computeroutput>false</computeroutput>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="428" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ac74ade0d84fa71669cba8f1aabe0648a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfTokenVector &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfTokenVector&amp; GetSchemaAttributeNames</definition>
        <argsstring>(bool includeInherited=true, const TfToken instanceName=TfToken())</argsstring>
        <name>GetSchemaAttributeNames</name>
        <param>
          <type>bool</type>
          <declname>includeInherited</declname>
          <defval>true</defval>
        </param>
        <param>
          <type>const TfToken</type>
          <declname>instanceName</declname>
          <defval>TfToken()</defval>
        </param>
        <briefdescription>
<para>Return a vector of names of all pre-declared attributes for this schema class and all its ancestor classes for a given instance name. </para>        </briefdescription>
        <detaileddescription>
<para>Does not include attributes that may be authored by custom/extended methods of the schemas involved. The names returned will have the proper namespace prefix. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a79c3fa7201f316f28fbb611c9c316034" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxTendonAxisRootAPI Get</definition>
        <argsstring>(const UsdStagePtr &amp;stage, const SdfPath &amp;path)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdStagePtr &amp;</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> holding the prim adhering to this schema at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>If no prim exists at <computeroutput>path</computeroutput> on <computeroutput>stage</computeroutput>, or if the prim at that path does not adhere to this schema, return an invalid schema object. <computeroutput>path</computeroutput> must be of the format &lt;path&gt;.physxTendon:name .</para><para>This is shorthand for the following:</para><para><programlisting><codeline><highlight class="normal">*<sp/><sp/>TfToken<sp/>name<sp/>=<sp/>SdfPath::StripNamespace(path.GetToken());</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae6b8434ca1cfc514066c2c9449110feb" kindref="member">PhysxSchemaPhysxTendonAxisRootAPI</ref>(</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/>stage-&gt;GetPrimAtPath(path.GetPrimPath()),<sp/>name);</highlight></codeline>
<codeline><highlight class="normal">*<sp/><sp/></highlight></codeline>
</programlisting> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="185" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1af93bf4eee4386e87fdc4c414df6ed927" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxTendonAxisRootAPI Get</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;name)</argsstring>
        <name>Get</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return a <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> with name <computeroutput>name</computeroutput> holding the prim <computeroutput>prim</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>Shorthand for <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI(prim, name)</ref>; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa8ff5e877e3474ed29495ff9b7af84be" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API bool</type>
        <definition>static PHYSXSCHEMA_API bool IsSchemaPropertyBaseName</definition>
        <argsstring>(const TfToken &amp;baseName)</argsstring>
        <name>IsSchemaPropertyBaseName</name>
        <param>
          <type>const TfToken &amp;</type>
          <declname>baseName</declname>
        </param>
        <briefdescription>
<para>Checks if the given name <computeroutput>baseName</computeroutput> is the base name of a property of PhysxTendonAxisRootAPI. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1adf498b299a09f3bdaa5cb18cb03044ab" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API bool</type>
        <definition>static PHYSXSCHEMA_API bool IsPhysxTendonAxisRootAPIPath</definition>
        <argsstring>(const SdfPath &amp;path, TfToken *name)</argsstring>
        <name>IsPhysxTendonAxisRootAPIPath</name>
        <param>
          <type>const SdfPath &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>TfToken *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Checks if the given path <computeroutput>path</computeroutput> is of an API schema of type PhysxTendonAxisRootAPI. </para>        </briefdescription>
        <detaileddescription>
<para>If so, it stores the instance name of the schema in <computeroutput>name</computeroutput> and returns true. Otherwise, it returns false. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="204" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a83510a604aca475066c2c692e75d142e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref></type>
        <definition>static PHYSXSCHEMA_API PhysxSchemaPhysxTendonAxisRootAPI Apply</definition>
        <argsstring>(const UsdPrim &amp;prim, const TfToken &amp;name)</argsstring>
        <name>Apply</name>
        <param>
          <type>const UsdPrim &amp;</type>
          <declname>prim</declname>
        </param>
        <param>
          <type>const TfToken &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Applies this <bold>multiple-apply</bold> API schema to the given <computeroutput>prim</computeroutput> along with the given instance name, <computeroutput>name</computeroutput>. </para>        </briefdescription>
        <detaileddescription>
<para>This information is stored by adding &quot;PhysxTendonAxisRootAPI:&lt;i&gt;name&lt;/i&gt;&quot; to the token-valued, listOp metadata <emphasis>apiSchemas</emphasis> on the prim. For example, if <computeroutput>name</computeroutput> is &apos;instance1&apos;, the token &apos;PhysxTendonAxisRootAPI:instance1&apos; is added to &apos;apiSchemas&apos;.</para><para><simplesect kind="return"><para>A valid <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> object is returned upon success. An invalid (or empty) <ref refid="class_physx_schema_physx_tendon_axis_root_a_p_i" kindref="compound">PhysxSchemaPhysxTendonAxisRootAPI</ref> object is returned upon failure. See UsdPrim::ApplyAPI() for conditions resulting in failure.</para></simplesect>
<simplesect kind="see"><para>UsdPrim::GetAppliedSchemas() </para><simplesectsep/><para>UsdPrim::HasAPI() </para><simplesectsep/><para>UsdPrim::ApplyAPI() </para><simplesectsep/><para>UsdPrim::RemoveAPI() </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="226" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API UsdSchemaType</type>
        <definition>PHYSXSCHEMA_API UsdSchemaType _GetSchemaType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetSchemaType</name>
        <briefdescription>
<para>Returns the type of schema this class belongs to. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>UsdSchemaType </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="233" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>static PHYSXSCHEMA_API const TfType&amp; _GetStaticTfType</definition>
        <argsstring>()</argsstring>
        <name>_GetStaticTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool _IsTypedSchema</definition>
        <argsstring>()</argsstring>
        <name>_IsTypedSchema</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="241" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_physx_schema_physx_tendon_axis_root_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>PHYSXSCHEMA_API const TfType &amp;</type>
        <definition>PHYSXSCHEMA_API const TfType&amp; _GetTfType</definition>
        <argsstring>() const override</argsstring>
        <name>_GetTfType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="245" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>WARNING: Draft API, this design is not fixed and may change in the future. </para>    </briefdescription>
    <detaileddescription>
<para>At this point, we don&apos;t support multi-axis joints (e.g. spherical, D6) or 0-DOF joints (fixed joints) yet.</para><para>Applied to a Physics Joint that must be part of an articulation, e.g. PhysicsRevoluteJoint or PhysicsPrismaticJoint.</para><para>In addition to creating a regular axis of the fixed tendon, the root API provides attributes that apply to the entire tendon. The root API must be applied to the joint that is the common ancestor of all joint axes in the tendon.</para><para>For restrictions on tendon structure and grouping of axes into tendons, see PhysxTendonAxisAPI.</para><para>Details on dynamics:</para><para>Fixed tendons create an abstract coupling between degrees of freedom of an articulation. Each tendon axis is associated with an articulation joint and a specific joint axis, i.e. degree of freedom. Since the joint axes in the tendon must follow the articulation with the root axis as the common ancestor, the tendon mirrors the articulation&apos;s tree structure. This tree structure is key for the computation of the constraint forces applied by the tendon on the articulation links.</para><para>The length of the fixed tendon at a given axis is evaluated recursively as</para><para>tendonLength[i] = tendonLength[i - 1] + gearing[i] * jointPosition[i]</para><para>where gearing[i] and jointPosition[i] refer to the i-th tendon axis gearing and corresponding joint axis position in degrees (rotational) or distance units (translational), and tendonLength[i - 1] is the length at the parent tendon axis in the tendon tree. Note that since the tendon length is an abstract construct as a weighted sum of joint positions, negative &apos;lengths&apos; are possible.</para><para>For the root axis, we define the tendon length to be</para><para>tendonLength[0] = offset + gearing[0] * jointPosition[0]</para><para>i.e. the parent length for the root is set to the offset attribute.</para><para>Before we can define the fixed-tendon constraint forces, we define the tendon-axis velocity v[i] that damping is acting on. The velocity v[i] is the velocity of the virtual joint between the child link of the tendon axis&apos; articulation joint and the articulation parent link of the tendon&apos;s root-axis joint:</para><para>v[i] = vChild[i] - vRoot</para><para>where vChild[i] is the velocity of the child link projected onto the tendon-joint axis, and, analogously, vRoot is the root-axis&apos; parent link&apos;s velocity projected onto the root axis. For example, consider an articulation with three links connected by two revolute joints, and the first link is a fixed base. The first revolute joint is the root axis of the tendon, and the second axis is between the two moving links. Then, the root-tendon-axis velocity v[0] is equal to the velocity of its joint, and the second tendon-axis velocity is equal to the angular velocity of the third link, since the parent link of the root axis is fixed and has angular velocity zero (i.e. vRoot = 0).</para><para>Now we can define the constraint force (or torque) applied at the i-th axis</para><para>f[i] = sgn(gearing[i]) * (stiffness * (restLength - tendonLength[i]) + limitForce[i]) - damping * v[i]</para><para>where the signum on the gearing ensures that the force or torque is in the deviation-reducing direction, and the limitForce[i] is an additional force from user-set limits on the tendon length. In particular, it is</para><para>limitForce[i] = limitStiffness * (upperLimit - tendonLength[i]) <emphasis>if</emphasis> tendonLength[i] &gt; upperLimit limitForce[i] = limitStiffness * (lowerLimit - tendonLength[i]) <emphasis>if</emphasis> tendonLength[i] &lt; lowerLimit limitForce[i] = 0 <emphasis>otherwise</emphasis>.</para><para>Setting stiffness to zero allows implementing one-sided constraints using the limit parameters.</para><para>Finally, a reaction force/torque equal and opposing f[i] is applied to the tendon root axis&apos; parent link according to the type of the root-joint axis. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="247">
        <label>PhysxSchemaPhysxTendonAxisAPI</label>
        <link refid="class_physx_schema_physx_tendon_axis_a_p_i"/>
      </node>
      <node id="246">
        <label>PhysxSchemaPhysxTendonAxisRootAPI</label>
        <link refid="class_physx_schema_physx_tendon_axis_root_a_p_i"/>
        <childnode refid="247" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="249">
        <label>PhysxSchemaPhysxTendonAxisAPI</label>
        <link refid="class_physx_schema_physx_tendon_axis_a_p_i"/>
      </node>
      <node id="248">
        <label>PhysxSchemaPhysxTendonAxisRootAPI</label>
        <link refid="class_physx_schema_physx_tendon_axis_root_a_p_i"/>
        <childnode refid="249" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" line="120" column="1" bodyfile="W:/919a5455eee1e83c/src/physxSchema/physxTendonAxisRootAPI.h" bodystart="119" bodyend="441"/>
    <listofallmembers>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a1cf3042cb6534cfb5768a029099cd2f1" prot="protected" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>_GetSchemaType</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a3014e93c3ab2a0b4770d0ce561a03b9d" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>_GetStaticTfType</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ac9917b582d82c9a980c227a7de3d4352" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>_GetTfType</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1abbc02364dd87e9f147201cbd8d260d43" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>_IsTypedSchema</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a83510a604aca475066c2c692e75d142e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>Apply</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a155bfc53565dfdd638d2591f4ba5292f" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateDampingAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1ada7623817d52bc6054396fdce684fc27" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateGearingAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1a405a6eed0fbd9707cef0bade77f5f852" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateJointAxisAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a801895da22cf48e24e59513921c67ef4" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateLimitStiffnessAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a6fe6f32b81daf020c3954bc10bc0f5bf" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateLowerLimitAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a377e35cc5425deec9c911737065f27d2" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateOffsetAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a7e8b47b32dd15752c79995fba2402818" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateRestLengthAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ab7d259ee6d127ebfa67130f495bc2349" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateStiffnessAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ab0ac6fadaad922926bf918b8c21b3470" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateTendonEnabledAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a6355f453802dca57cf793c2ed95a0dd5" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>CreateUpperLimitAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a79c3fa7201f316f28fbb611c9c316034" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>Get</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1af93bf4eee4386e87fdc4c414df6ed927" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>Get</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa2b0bd46cc807dcfea6fd32438e18f03" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetDampingAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1ad9fe36eb5c442fd18e6fed5b52475f2c" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetGearingAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1a4a3ba2871c3812d609ec67f245db0cd2" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetJointAxisAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae286d50608e53f8e8d7cb14720ea0411" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetLimitStiffnessAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a20f7b202e8c2e6c10846876344265f8e" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetLowerLimitAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa53b87421fbc15993adfd11e9b2045eb" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetName</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a25304ea511b8e5fe1d3e0cea9d6ef9eb" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetOffsetAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1afd58738ea12e3f1d4eb85e247d871eff" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetRestLengthAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ac74ade0d84fa71669cba8f1aabe0648a" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetSchemaAttributeNames</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a5c5a2bc23b56ea80a76850615253c450" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetStiffnessAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1a74cc1178e0f1893aeaf7bd8b5d350ea0" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetTendonEnabledAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1af6b8d4e35b564796622b8bccb3c3acba" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>GetUpperLimitAttr</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1a8cc7d50341dd8a9e4599293653e857c3" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>IsPhysxTendonAxisAPIPath</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1adf498b299a09f3bdaa5cb18cb03044ab" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>IsPhysxTendonAxisRootAPIPath</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aa8ff5e877e3474ed29495ff9b7af84be" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>IsSchemaPropertyBaseName</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1a1bb9f013f367b772ba36c6b1fee296cd" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>PhysxSchemaPhysxTendonAxisAPI</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1abf39ed3b2753e36680e809eee0731c76" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>PhysxSchemaPhysxTendonAxisAPI</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae6b8434ca1cfc514066c2c9449110feb" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>PhysxSchemaPhysxTendonAxisRootAPI</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1ae1cd7e453c64a44502751262511e90a7" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>PhysxSchemaPhysxTendonAxisRootAPI</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aac43c1afa0b9b55b44c30dc3bb91b0e7" prot="public" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>schemaType</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aff8b8d83211f127c6c4cba48fb7d3334" prot="private" virt="non-virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>UsdSchemaRegistry</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_a_p_i_1ae18ba47bf22e4e496773989dc3b83447" prot="public" virt="virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>~PhysxSchemaPhysxTendonAxisAPI</name></member>
      <member refid="class_physx_schema_physx_tendon_axis_root_a_p_i_1aea7c408ff484f2105fe30cf69a20c6be" prot="public" virt="virtual"><scope>PhysxSchemaPhysxTendonAxisRootAPI</scope><name>~PhysxSchemaPhysxTendonAxisRootAPI</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
