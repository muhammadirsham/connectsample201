#usda 1.0
(
	subLayers = [
    @usdGeom/schema.usda@
	]
)

over "GLOBAL" (
	customData = {
	string libraryName = "destructionSchema"
	string libraryPath = "destructionSchema"
    }
)
{

}


class "DestructibleBaseAPI"
(
    customData = {
        string className = "DestructibleBaseAPI"
    }

    doc = """Applies destructible attributes to any UsdGeomXformable prim
    and allows mesh descendants to be used to author destruction."""

    inherits = </APISchemaBase>
)
{
    int destruct:supportDepth = 2147483647 (
        customData = {
            string apiName = "supportDepth"
        }

        displayName = "Support Depth"
        doc = """Desired chunk depth for support graph representation.
        Leaves that are shallower than this depth and non-leaves at this depth
        will be support chunks and may be bonded together using bonds.  The
        setting will make leaf chunks the support chunks."""
    )

  	float destruct:defaultBondStrength = -1.0 (
        customData = {
            string apiName = "defaultBondStrength"
        }

        displayName = "Default Bond Strength"
        doc = """Default value to use for all bonds in the destructible.
        If not authored, use individual bond strength values."""
    )

  	float destruct:defaultChunkStrength = -1.0 (
        customData = {
            string apiName = "defaultChunkStrength"
        }

        displayName = "Default Chunk Strength"
        doc = """Default value to use for all chunks in the destructible.
        If not authored, use individual chunk strength values."""
    )
}


class "DestructibleChunkAPI"
(
    customData = {
        string className = "DestructibleChunkAPI"
    }

    doc = """When applied to a UsdGeomMesh descendant of a prim with the
    DestructibleBaseAPI, this mesh will be considered part of a destructible
    hierarchy."""

    inherits = </APISchemaBase>
)
{
    rel destruct:parentChunk (
        customData = {
            string apiName = "parentChunk"
        }

        displayName = "Parent Chunk"
        doc = """The parent chunk prim.  If empty, this chunk is a root."""
    )

  	point3f destruct:centroid = (-inf, -inf, -inf) (
        customData = {
            string apiName = "centroid"
        }

        displayName = "Centroid"
        doc = """Optional chunk centroid.  If not authored, it will be
        calculated from the chunk mesh."""
    )

  	float destruct:volume = -inf (
        customData = {
            string apiName = "volume"
        }

        displayName = "Volume"
        doc = """Optional chunk volume.  If not authored, it will be
        calculated from the chunk mesh."""
    )

  	float destruct:strength = -1.0 (
        customData = {
            string apiName = "strength"
        }

        displayName = "Strength"
        doc = """The chunk's strength.  Default value = -1.0.  If negative,
        the chunk's volume will be used."""
    )
}


class "DestructibleBondAPI"
(
    customData = {
        string className = "DestructibleBondAPI"
    }

    doc = """When applied to a UsdGeomXformable descendant of a prim with the
    DestructibleBaseAPI, this prim may be used to override, delete, or define
    bonds between chunks."""

    inherits = </APISchemaBase>
)
{
    rel destruct:attached (
        customData = {
            string apiName = "attached"
        }

        displayName = "Attached"
        doc = """If two paths are given, at least one must be a chunk.  If the
        second path is also a chunk, the bond is internal.  Otherwise the
        second prim must be a rigid body collider and the bond is external.
        If only one path is given, the bond is external, attaching to the
        static world."""
    )

  	point3f destruct:centroid = (-inf, -inf, -inf) (
        customData = {
            string apiName = "centroid"
        }

        displayName = "Centroid"
        doc = """Optional bond centroid.  If not authored, the translation
        component of this prim's transform will be used as the centroid."""
    )

  	normal3f destruct:normal = (0.0, 0.0, 0.0) (
        customData = {
            string apiName = "normal"
        }

        displayName = "Normal"
        doc = """Optional bond normal.  If not authored, the Z-axis of the
        local frame defined by this prim's transform will be used as the
        normal."""
    )

  	float destruct:area = -inf (
        customData = {
            string apiName = "area"
        }

        displayName = "Area"
        doc = """Optional bond area.  If not authored, it will be calculated
        from the adjoining chunks."""
    )

  	float destruct:strength = -1.0 (
        customData = {
            string apiName = "strength"
        }

        displayName = "Strength"
        doc = """The bond's strength.  Default value = -1.0.  If negative, the
        bond's area will be used."""
    )

  	bool destruct:unbreakable = false (
        customData = {
            string apiName = "unbreakable"
        }

        displayName = "Unbreakable"
        doc = """Whether or not the bond is unbreakable.
        Default value = false.  If true, the bond has effectively infinite
        strength."""
    )
}

class "DestructibleInstAPI"
(
    customData = {
        string className = "DestructibleInstAPI"
    }

    doc = """When applied to a UsdGeomXformable, it creates a destructible
    instance based off of the geometry and attributes defined by a referenced
    DestructibleBaseAPI."""

    inherits = </APISchemaBase>
)
{
    rel destruct:base (
        customData = {
            string apiName = "base"
        }

        displayName = "base"
        doc = """The referenced destructible base
        (see DestructibleBaseAPI)."""
    )
}
